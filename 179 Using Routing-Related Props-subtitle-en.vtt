WEBVTT

00:02.130 --> 00:05.970
Right now in our application we are able to navigate around.

00:06.030 --> 00:10.330
We are able to do that without reloading the page.

00:10.350 --> 00:15.690
Now let's have a look at the information we actually get in the components for loading because re-act

00:15.690 --> 00:20.240
router gives us some extra information about the loaded roud fruit props.

00:20.340 --> 00:26.340
Let's look at posts there in component that Mount which will be executed each time we changed a page

00:26.370 --> 00:30.690
because the component is really removed and added to the DOM all the time.

00:30.690 --> 00:33.610
There we not only reach out to the Web.

00:33.810 --> 00:40.720
Let's also output the props we have by simply putting these props.

00:40.730 --> 00:43.080
Now let's have a look at what we got here.

00:43.250 --> 00:49.100
If you go to home now disaster props object and history location and match.

00:49.110 --> 00:51.280
This is not something we set up.

00:51.320 --> 00:53.520
This is passed by re-act router.

00:53.690 --> 00:54.260
No match.

00:54.260 --> 01:01.130
Give us some information about the match drought you saw that we defined it to be exact the path and

01:01.140 --> 01:07.340
you are alid found therefore and potential parents all come back to what parents are later.

01:07.430 --> 01:13.210
You get more information about the location and dare you see for example the search.

01:13.220 --> 01:19.880
Parents we set up or something like that and the hash fragment and the history the history Optik also

01:19.880 --> 01:28.040
has some methods we can use like push to interact with that and push a new page programmatically without

01:28.040 --> 01:29.660
needing a link component.

01:29.660 --> 01:32.420
This is all something I will show you later.

01:32.420 --> 01:39.640
Now let's go back to our components and let's also lock the props in the new post.

01:39.830 --> 01:46.650
There we also therefore can add component did mount and insight there.

01:46.670 --> 01:52.590
I now also want to output the props because there we should see more information regarding the fragment

01:52.590 --> 01:54.160
and the search parens.

01:54.210 --> 02:01.700
So let's click on new post and inspect the Propst there and now see under match the path we found there.

02:01.710 --> 02:04.830
You see that it also is a exact match.

02:04.830 --> 02:07.460
Now we didn't set up exact matching here.

02:07.470 --> 02:11.340
We don't have the exact option but we are on new post.

02:11.340 --> 02:18.900
If I were on new post to I added this manually it would still render this because we didn't set up exact

02:18.900 --> 02:25.410
matching but it would also see that we don't have an exact match in the match property.

02:25.410 --> 02:29.450
So this really tells us is the full u r l the full path.

02:29.640 --> 02:34.980
The path we set up in the conflict or not we also got more information on the location.

02:35.010 --> 02:40.500
You'll see the search at this you added at the end and you could manual you parse this to retrieve the

02:40.500 --> 02:41.400
query parens.

02:41.640 --> 02:47.590
And you see your hash fragment to which you could then use to jump to a certain part of your page or

02:47.590 --> 02:50.380
as smoothly scroll there whatever you want.

02:50.850 --> 02:54.130
So this is some additional information we get.

02:54.160 --> 03:01.530
This is part of the props and you can use that to for example extract your equerry parents moved to

03:01.530 --> 03:05.060
a hashed fragment or do whatever else you need to do.

03:05.220 --> 03:10.350
We will later see how we used this history object to use a method that provides us.
